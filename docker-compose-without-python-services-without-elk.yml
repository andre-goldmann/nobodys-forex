services:

  nginx:
    container_name: middlenginx
    image: nginx:stable-alpine
    restart: on-failure
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
    expose:
      - "80"
      - "443:443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.middle.without.python.services.conf:/etc/nginx/conf.d/default.conf:rw
      - ./certs/certificate.pem:/etc/nginx/certificate.pem
      - ./certs/private.key:/etc/nginx/private.key
      - ./certs/passphrase.txt:/etc/nginx/passphrase.txt
    depends_on:
      - keycloak

  keycloak:
    container_name: keycloak
    restart: on-failure
    build:
      context: ./keycloak
      args:
        KEYCLOAK_VERSION: 23.0.3
    environment:
      KEYCLOAK_USER: keycloak_hero
      KEYCLOAK_PASSWORD: 8rjFab9E8r13
      KEYCLOAK_HEALTH_ENABLED: true
      KEYCLOAK_METRICS_ENABLED: true
      KEYCLOAK_SPI_THEME_DEFAULT: keycloak
      KEYCLOAK_LOGLEVEL: DEBUG
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: 8rjFab9E8r13
      DEBUG: true
      #DEBUG_PORT: '*:8787'
      DB_VENDOR: postgres
      DB_ADDR: postgres
      KC_DB_URL_HOST: db
      KC_DB_URL_PORT: 6432
      KC_DB_SCHEMA: keycloak
      DB_USER: nobodysforex
      DB_PASSWORD: pwd
      TZ: Europe/Paris
      KC_HOSTNAME_URL: https://172.31.138.212:8443
      KC_HEALTH_ENABLED: true
      KC_DB_URL: jdbc:postgresql://db:6432/trading-db
      #KC_HTTPS_CERTIFICATE_FILE: /opt/jboss/keycloak/conf/certificate.pem
      #KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/jboss/keycloak/conf/private.key
      KC_HTTPS_KEY_STORE_FILE: /opt/jboss/keycloak/conf/jdg.digital.p12
      KC_HTTPS_KEY_STORE_PASSWORD: Blade1708
      KC_HTTPS_KEY_STORE_TYPE: PKCS12
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
    ports:
      - "8443:8443"
    expose:
      - "8443"
    healthcheck:
      test: [ "CMD", "curl", "-f", "--insecure", "https://localhost:8443/realms/master" ]
      interval: 10s
      retries: 12
      start_period: 30s
      timeout: 5s
    volumes:
      - ./backup/keycloak/changelog.xml:/liquibase/changelog/changelog.xml
      - ./backup/keycloak/keycloak_data:/opt/jboss/keycloak/standalone/data
      - ./certs/jdg.digital.p12:/opt/jboss/keycloak/conf/jdg.digital.p12
      - ./certs/certificate.pem:/opt/jboss/keycloak/conf/certificate.pem
      - ./certs/private.key:/opt/jboss/keycloak/conf/private.key
      - ./certs/keycloak.crt:/etc/x509/https/tls.crt
      - ./certs/keycloak.key:/etc/x509/https/tls.key
    depends_on:
      - db

  db:
    image: postgres:14.1-alpine
    container_name: db
    restart: on-failure
    env_file:
      - ./database.dev.env
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
    expose:
      - "6432" # Publishes 5433 to other containers but NOT to host machine
    ports:
      - '6432:6432'
    volumes:
      - db:/var/lib/postgresql/data
      #- ./init-multi-postgres-databases.sh:/docker-entrypoint-initdb.d/init-multi-postgres-databases.sh
    command: -p 6432

  #apigateway:
  #  container_name: apigateway
  #  build: ./api-gateway
  #  restart: always
  #  labels:
  #    collect_logs_with_filebeat: "true"
  #    decode_log_event_to_json_object: "true"
  #  ports:
  #    - "9080:9080"
  #  volumes:
  #    - ./certs/certificate.pem:/opt/apigateway/conf/certificate.pem
  #    - ./certs/private.key:/opt/apigateway/conf/private.key
  #  depends_on:
  #    - keycloak

  #javabackend:
  #  container_name: javabackend
  #  build: ./forex-backend-java
  #  restart: always
  #  labels:
  #    collect_logs_with_filebeat: "true"
  #    decode_log_event_to_json_object: "true"
  #  ports:
  #    - "5080:5080"
  #  volumes:
  #    - ./certs/certificate.pem:/opt/javabackend/conf/certificate.pem
  #    - ./certs/private.key:/opt/javabackend/conf/private.key
  #  depends_on:
  #    - keycloak

  #forexfrontend:
  #  container_name: forexfrontend
  #  build:
  #    context: ./forex-frontend
  #    dockerfile: ./Dockerfile
  #  volumes:
  #    - .:/usr/app/
  #    - /usr/app/node_modules
  #  depends_on:
  #    - keycloak

  forexvaadinfrontend:
    container_name: forexvaadinfrontend
    build: ./forex-frontend-vaadin
    restart: always
    ports:
      - "7080:7080"
    volumes:
      - ./certs/keycloak.crt:/opt/forexvaadinfrontend/conf/certificate.pem
      - ./certs/keycloak.key:/opt/forexvaadinfrontend/conf/private.key
      #- ./certs/keycloak.crt:/etc/x509/https/tls.crt
      #- ./certs/keycloak.key:/etc/x509/https/tls.key
    depends_on:
      - keycloak
      #keycloak:
      #  condition: service_healthy

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
    ports:
      - 6333:6333
      - 6334:6334
    #expose:
    #  - 6333
    #  - 6334
    #  - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./qdrant_data:/qdrant_data

volumes:
  db:
    driver: local

configs:
  qdrant_config:
    content: |
      log_level: INFO