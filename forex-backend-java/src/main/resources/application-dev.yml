server:
  port: 5080
  forward-headers-strategy: framework
  servlet:
    context-path: /forex

spring:
  #security:
  #  oauth2:
  #    resourceserver:
  #      jwt:
  #        issuer-uri: https://172.21.230.27:8080/realms/forex_admininstrator
  #        jwk-set-uri: https://172.21.230.27:8080/realms/forex_admininstrator/protocol/openid-connect/certs
  datasource:
    url: jdbc:postgresql://172.31.138.212:6432/trading-db
    username: nobodysforex
    password: pwd
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: 172.31.138.212:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: forex #group-id is the name of the consumer group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

logging:
  level:
    root: INFO
    #org:
    #  hibernate:
    #    SQL: DEBUG
    #    type.descriptor.sql.BasicBinder: TRACE

#matomo:
#  tracker:
#    api-endpoint: http://85.215.32.163:8080/matomo.php
#    default-site-id: 2
#    enabled: true
#    connect-timeout: 10s
#    socket-timeout: 30s
#    user-agent: MatomoJavaClient
#    log-failed-tracking: true
#    disable-ssl-cert-validation: true
#    disable-ssl-host-verification: false
#    thread-pool-size: 2
