version: '3.8'

#secrets:
  # Secrets are single-line text files where the sole content is the secret
  # Paths in this example assume that secrets are kept in local folder called ".secrets"
 # DB_ROOT_PWD:
 #   file: .secrets/db_root_pwd.txt
 # MYSQL_PWD:
 #   file: .secrets/mysql_pwd.txt

services:
  #app:
  #  image: 'jc21/nginx-proxy-manager:latest'
  #  restart: unless-stopped
  #  ports:
      # Public HTTP Port:
      #- '80:80'
      # Public HTTPS Port:
  #    - '443:443'
      # Admin Web Port:
  #    - '81:81'
  #  environment:
      # These are the settings to access your db
  #    DB_MYSQL_HOST: "mariadb"
  #    DB_MYSQL_PORT: 3306
  #    DB_MYSQL_USER: "npm"
  #    DB_MYSQL_PASSWORD: "npm"  # use secret instead
      #DB_MYSQL_PASSWORD__FILE: /run/secrets/MYSQL_PWD
  #    DB_MYSQL_NAME: "npm"
      # If you would rather use Sqlite, remove all DB_MYSQL_* lines above
      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'
  #  volumes:
  #    - ./data:/data
  #    - ./letsencrypt:/etc/letsencrypt
    #secrets:
    #  - MYSQL_PWD
   # depends_on:
   #   - mariadb

  #mariadb:
  #  image: jc21/mariadb-aria
  #  restart: unless-stopped
  #  environment:
  #    MYSQL_ROOT_PASSWORD: "npm"  # use secret instead
      #MYSQL_ROOT_PASSWORD__FILE: /run/secrets/DB_ROOT_PWD
  #    MYSQL_DATABASE: "npm"
  #    MYSQL_USER: "npm"
  #    MYSQL_PASSWORD: "npm"  # use secret instead
  #   # MYSQL_PASSWORD__FILE: /run/secrets/MYSQL_PWD
  #  volumes:
  #    - ./mysql:/var/lib/mysql
  #  #secrets:
    #  - DB_ROOT_PWD
    #  - MYSQL_PWD

  backend:
    container_name: backend
    build: ./
    restart: on-failure
    ports:
      - "6081:6081"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/backend:/var/lib/backend
    #env_file:
    #  - variables.env
    depends_on:
      - "db"

  tvsignals:
    container_name: tvsignals
    build: ./tvsignals
    ports:
      - "80:80"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/backend:/var/lib/tvsignals
    #env_file:
    #  - variables.env
    depends_on:
      - "db"
      - "backend"

  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=nobodysforex
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_DB=trading-db
    expose:
      - "6432" # Publishes 5433 to other containers but NOT to host machine
    ports:
      - '6432:6432'
    volumes:
      - db:/var/lib/postgresql/data
    command: -p 6432

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    #volumes:
    #  - pgadmin-data:/var/lib/pgadmin

    #pgadmin:
  #  container_name: pgadmin4_container
  #  image: dpage/pgadmin4
  #  restart: always
  #  environment:
  #    PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #    PGADMIN_DEFAULT_PASSWORD: root

  ##zookeeper:
  #  image: wurstmeister/zookeeper
  #  ports:
  #    - "2181:2181"
  #kafka:
  #  build: ./kafka
  #  ports:
  #    - "9092:9092"
  #  environment:
  #    KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
  #    KAFKA_CREATE_TOPICS: "test:1:1"
  #    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
    # do we need the following?
    #command: pip3 install kafka

volumes:
  db:
    driver: local