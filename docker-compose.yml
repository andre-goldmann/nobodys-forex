services:

  nginx:
    container_name: middlenginx
    image: nginx:stable-alpine
    restart: on-failure
    expose:
      - "80"
      - "443:443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.middle.conf:/etc/nginx/conf.d/default.conf:rw
      - ./certs/certificate.pem:/etc/nginx/certificate.pem
      - ./certs/private.key:/etc/nginx/private.key
      - ./certs/passphrase.txt:/etc/nginx/passphrase.txt
    depends_on:
      - keycloak
      - elasticsearch
      - kibana

  keycloak:
    container_name: keycloak
    restart: on-failure
    build:
      context: ./keycloak
      args:
        KEYCLOAK_VERSION: 23.0.3
    env_file:
      - ./keycloak.dev.env
    ports:
      - "8443:8443"
    expose:
      - "8443"
    volumes:
      - ./backup/keycloak/changelog.xml:/liquibase/changelog/changelog.xml
      - ./backup/keycloak/keycloak_data:/opt/jboss/keycloak/standalone/data
      - ./certs/jdg.digital.p12:/opt/jboss/keycloak/conf/jdg.digital.p12
      - ./certs/certificate.pem:/opt/jboss/keycloak/conf/certificate.pem
      - ./certs/private.key:/opt/jboss/keycloak/conf/private.key
    depends_on:
      - db

  db:
    image: postgres:14.1-alpine
    container_name: db
    restart: on-failure
    env_file:
      - ./database.dev.env
    expose:
      - "6432" # Publishes 5433 to other containers but NOT to host machine
    ports:
      - '6432:6432'
    volumes:
      - db:/var/lib/postgresql/data
      #- ./init-multi-postgres-databases.sh:/docker-entrypoint-initdb.d/init-multi-postgres-databases.sh
    command: -p 6432

  apigateway:
    container_name: apigateway
    build: ./api-gateway
    restart: always
    ports:
      - "9080:9080"
    volumes:
      - ./certs/certificate.pem:/opt/apigateway/conf/certificate.pem
      - ./certs/private.key:/opt/apigateway/conf/private.key
    depends_on:
      - keycloak

  javabackend:
    container_name: javabackend
    build: ./forex-backend-java
    restart: always
    ports:
      - "5080:5080"
    volumes:
      - ./certs/certificate.pem:/opt/javabackend/conf/certificate.pem
      - ./certs/private.key:/opt/javabackend/conf/private.key
    depends_on:
      - keycloak

  forexfrontend:
    container_name: forexfrontend
    build:
      context: ./forex-frontend
      dockerfile: ./Dockerfile
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules
    depends_on:
      - keycloak

  backend:
    container_name: backend
    build: ./
    restart: always
    ports:
      - "6081:6081"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/backend:/var/lib/backend
    depends_on:
      - keycloak

  tvsignals:
    container_name: tvsignals
    build: ./tvsignals
    restart: always
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/backend:/var/lib/tvsignals
    depends_on:
      - keycloak

#https://github.com/elastic/elasticsearch/blob/8.13/docs/reference/setup/install/docker/docker-compose.yml
  #elasticsearch:
  #  image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
  #  networks:
  #    - elk
  #  environment:
  #    - bootstrap.memory_lock=true
  #    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #    - "discovery.zen.ping.unicast.hosts=elasticsearch"
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #    nofile:
  #      soft: 65536
  #      hard: 65536
  #  mem_limit: 1g
  #  volumes:
      #- 'esdata:/usr/share/elasticsearch/data'
  #    - ./elastisearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro

  #kibana:
  #  image: docker.elastic.co/kibana/kibana:8.13.0
  #  networks:
  #    - elk
  #  volumes:
  #    - ./elastisearch/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
  #  links:
  #    - elasticsearch

volumes:
  esdata:
  db:
    driver: local

networks:
  elk:
    driver: bridge